# @package _global_

defaults:
  - _self_
  - /data: urbansound8k

hydra:
  launcher:
    timeout_min: 40


trainer:
  # ===== Base Trainer =====
  _target_: stable_ssl.JointEmbeddingTrainer

  # ===== loss Parameters =====
  loss:
    _target_: stable_ssl.NTXEntLoss
    temperature: 0.5

  # ===== Data Parameters =====
  data:
    _num_classes: 10
    train: # training dataset as indicated by name
      batch_size: 32
      drop_last: True
      shuffle: True
      dataset:
        transform:
          _target_: stable_ssl.data.MultiViewSampler
          transforms:
            - _target_: torchvision.transforms.v2.Compose
              transforms:
                - _target_: torchvision.transforms.v2.RandomResizedCrop
                  size: 224
                - _target_: torchvision.transforms.v2.RandomHorizontalFlip
                - _target_: torchvision.transforms.v2.ColorJitter
                  brightness: 0.8
                  contrast: 0.8
                  saturation: 0.8
                  hue: 0.2
                - _target_: torchvision.transforms.RandomGrayscale
                  p: 0.2
                - _target_: torchvision.transforms.v2.ToImage
                - _target_: torchvision.transforms.v2.ToDtype
                  dtype:
                    _target_: stable_ssl.utils.str_to_dtype
                    _args_: [float32]
                  scale: True
            - ${trainer.data.train.dataset.transform.transforms.0}
    test:
      batch_size: 32
      dataset:
        transform:
          _target_: torchvision.transforms.v2.Compose
          transforms:
            - _target_: torchvision.transforms.v2.CenterCrop
              size: 224
            - _target_: torchvision.transforms.v2.ToImage
            - _target_: torchvision.transforms.v2.ToDtype
              dtype:
                _target_: stable_ssl.utils.str_to_dtype
                _args_: [float32]
              scale: True

  # ===== Module Parameters =====
  module:
    backbone:
      _target_: stable_ssl.modules.load_backbone
      name: resnet50
      num_classes: null
      weights: False
    projector:
      _target_: stable_ssl.modules.MLP
      sizes: [2048, 512, 128]
      activation: ReLU
      batch_norm: False
    projector_classifier:
      _target_: torch.nn.Linear
      in_features: 128
      out_features: ${trainer.data._num_classes}
    backbone_classifier:
      _target_: torch.nn.Linear
      in_features: 2048
      out_features: ${trainer.data._num_classes}

  # ===== Optim Parameters =====
  optim:
    epochs: 60
    optimizer:
      _target_: torch.optim.Adam
      _partial_: True
      lr: 0.001
    scheduler:
      _target_: torch.optim.lr_scheduler.LambdaLR
      _partial_: True
      lr_lambda:
        _target_: ssl_bioacoustics.utils.dummy_scheduler_lambda
        _partial_: True
  # ===== Logger WandB Parameters =====
  logger:
    wandb:
      group: simclr_urbansound8k_untrainedresnet50